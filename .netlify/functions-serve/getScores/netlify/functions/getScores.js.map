{
  "version": 3,
  "sources": ["../../Users/student/Desktop/Failed Sideprojects/fragmentedcat/netlify/functions/getScores.ts"],
  "sourceRoot": "/tmp/tmp-51027-8CmXSNoKxrrc",
  "sourcesContent": ["import { Handler } from '@netlify/functions'\nimport { PrismaClient } from '@prisma/client'\n\nconst prisma = new PrismaClient();\n\nconst handler: Handler = async (event, context) => {\n  // load all scores from the database and include player name\n  // from the players table.\n  const allScores = await prisma.player_scores.findMany({\n    include: {\n      players: {\n        select: { \n          name: true\n        }\n      }\n    },\n    orderBy: {\n      score: 'desc'\n    }\n  });\n\n  return {\n    statusCode: 200,\n    body: JSON.stringify(allScores.map(score => (\n      // flatten player name into score entry \n      { id: score.id, name: score.players.name, score: score.score }\n    ))\n    , (key, value) =>\n      // need to add a custom serializer because CockroachDB IDs map to\n      // JavaScript BigInts, which JSON.stringify has trouble serializing.\n      typeof value === 'bigint'\n        ? value.toString()\n        : value \n    )\n  }\n}\n\nexport { handler }\n\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,oBAA6B;AAE7B,IAAM,SAAS,IAAI,2BAAa;AAEhC,IAAM,UAAmB,OAAO,OAAO,YAAY;AAGjD,QAAM,YAAY,MAAM,OAAO,cAAc,SAAS;AAAA,IACpD,SAAS;AAAA,MACP,SAAS;AAAA,QACP,QAAQ;AAAA,UACN,MAAM;AAAA,QACR;AAAA,MACF;AAAA,IACF;AAAA,IACA,SAAS;AAAA,MACP,OAAO;AAAA,IACT;AAAA,EACF,CAAC;AAED,SAAO;AAAA,IACL,YAAY;AAAA,IACZ,MAAM,KAAK;AAAA,MAAU,UAAU,IAAI;AAAA;AAAA,QAEjC,EAAE,IAAI,MAAM,IAAI,MAAM,MAAM,QAAQ,MAAM,OAAO,MAAM,MAAM;AAAA,OAC9D;AAAA,MACC,CAAC,KAAK;AAAA;AAAA;AAAA,QAGN,OAAO,UAAU,WACb,MAAM,SAAS,IACf;AAAA;AAAA,IACN;AAAA,EACF;AACF;",
  "names": []
}
