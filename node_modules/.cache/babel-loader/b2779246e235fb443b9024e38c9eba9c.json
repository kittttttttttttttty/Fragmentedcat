{"ast":null,"code":"var _jsxFileName = \"/Users/student/Desktop/Failed Sideprojects/fragmentedcat/src/Admin.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Admin() {\n  _s();\n\n  const [players, setPlayers] = useState([]);\n  const [score, setScore] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [selectedPlayer, setSelectedPlayer] = useState(undefined);\n  useEffect(() => {\n    fetch('/.netlify/functions/getPlayers').then(response => response.json()).then(data => {\n      setPlayers(data);\n\n      if (data && data.length > 0) {\n        setSelectedPlayer(data[0]);\n      }\n    });\n  }, []);\n\n  const selectPlayer = players => {\n    setSelectedPlayer({\n      id: players.value,\n      name: players.options[players.selectedIndex].text\n    });\n  };\n\n  const addScore = () => {\n    const scoreEntry = {\n      playerId: selectedPlayer === null || selectedPlayer === void 0 ? void 0 : selectedPlayer.id,\n      score: score\n    };\n    fetch(\"/.netlify/functions/addScore\", {\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      method: \"POST\",\n      body: JSON.stringify(scoreEntry)\n    }).then(function (res) {\n      setMessage(`Leaderboard score of ${score} added for player ${selectedPlayer === null || selectedPlayer === void 0 ? void 0 : selectedPlayer.name}`);\n    }).catch(function (res) {\n      setMessage(`Unable to add score for player ${selectedPlayer === null || selectedPlayer === void 0 ? void 0 : selectedPlayer.name}`);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Admin\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Add a Leaderboard Entry\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this), players.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading Players...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3 score-entry\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Player\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          className: \"form-select\",\n          \"aria-label\": \"player selection\",\n          value: selectedPlayer === null || selectedPlayer === void 0 ? void 0 : selectedPlayer.id,\n          onChange: e => selectPlayer(e.target),\n          children: players.map(p => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: p.id,\n            children: p.name\n          }, p.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 39\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3 score-entry\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Score\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          \"aria-label\": \"score entry\",\n          value: score,\n          onChange: e => setScore(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary\",\n          onClick: addScore,\n          children: \"Add Score\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"admin-message\",\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Admin, \"h8UhEciT0BSzje9wAmP8+0kFFsY=\");\n\n_c = Admin;\n\nvar _c;\n\n$RefreshReg$(_c, \"Admin\");","map":{"version":3,"sources":["/Users/student/Desktop/Failed Sideprojects/fragmentedcat/src/Admin.tsx"],"names":["React","useEffect","useState","Admin","players","setPlayers","score","setScore","message","setMessage","selectedPlayer","setSelectedPlayer","undefined","fetch","then","response","json","data","length","selectPlayer","id","value","name","options","selectedIndex","text","addScore","scoreEntry","playerId","headers","method","body","JSON","stringify","res","catch","e","target","map","p"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\n\ninterface Player {\n    id: string,\n    name: string,\n}\n\nexport default function Admin() {\n    const [players, setPlayers] = useState([] as Player[]);\n    const [score, setScore] = useState(\"\");\n    const [message, setMessage] = useState(\"\");\n    const [selectedPlayer, setSelectedPlayer] = useState<Player | undefined>(undefined);\n    \n    useEffect(() => {\n        fetch('/.netlify/functions/getPlayers')\n            .then(response => response.json() as Promise<Player[]>)\n            .then(data => {\n                setPlayers(data);\n                if(data && data.length > 0) {\n                    setSelectedPlayer(data[0]);\n                }\n            });\n    }, []);\n\n    const selectPlayer = (players: HTMLSelectElement) => {\n        setSelectedPlayer({\n            id: players.value,\n            name: players.options[players.selectedIndex].text\n        });\n    }\n\n    const addScore = () => {\n        const scoreEntry = {\n            playerId: selectedPlayer?.id,\n            score: score\n        }\n\n        fetch(\"/.netlify/functions/addScore\",\n            {\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                },\n                method: \"POST\",\n                body: JSON.stringify(scoreEntry)\n            })\n            .then(function(res){\n                setMessage(`Leaderboard score of ${score} added for player ${selectedPlayer?.name}`);\n            })\n            .catch(function(res){\n                setMessage(`Unable to add score for player ${selectedPlayer?.name}`);\n            })\n    }\n\n    return <>\n        <h2>Admin</h2>\n        <h4>Add a Leaderboard Entry</h4>\n        {players.length === 0 ?\n            <div>Loading Players...</div>\n            :\n            <>\n            <div className=\"mb-3 score-entry\">\n                <label>Player</label>\n                <select\n                    className=\"form-select\"\n                    aria-label=\"player selection\"\n                    value={selectedPlayer?.id}\n                    onChange={e => selectPlayer(e.target)}>\n                    {players.map(p => <option key={p.id} value={p.id}>\n                        {p.name}\n                    </option>)}\n                </select>\n            </div>\n            <div className=\"mb-3 score-entry\">\n                <label>Score</label>\n                <input type=\"text\"\n                       className=\"form-control\"\n                       aria-label=\"score entry\"\n                       value={score}\n                       onChange={e => setScore(e.target.value)}/>\n            </div>\n            <div>\n                <button className=\"btn btn-primary\" onClick={addScore}>Add Score</button>\n            </div>\n            </>\n        }\n        <div className=\"admin-message\">{message}</div>\n    </>\n}\n\n"]},"metadata":{},"sourceType":"module"}