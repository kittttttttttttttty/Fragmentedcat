{"ast":null,"code":"var _jsxFileName = \"/Users/student/Desktop/Failed Sideprojects/fragmentedcat/src/Leaderboard.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction renderLeader(leader) {\n  return /*#__PURE__*/_jsxDEV(\"tr\", {\n    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n      children: leader.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: leader.score\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }, this)]\n  }, leader.id, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 12\n  }, this);\n}\n\nexport default function Leaderboard() {\n  _s();\n\n  const [leaders, setLeaders] = useState([]);\n  useEffect(() => {\n    fetch('/.netlify/functions/getScores').then(response => response.json()).then(data => setLeaders(data));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Leaderboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this), leaders.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"No leader scores to display. Would you like to \", /*#__PURE__*/_jsxDEV(Link, {\n        to: \"admin\",\n        children: \"add one\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 65\n      }, this), \"?\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this) : /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table leader-table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Score\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: leaders.map(l => renderLeader(l))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Leaderboard, \"36q6qXkRCpkFIpqjaPYPCW7Xzbg=\");\n\n_c = Leaderboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Leaderboard\");","map":{"version":3,"sources":["/Users/student/Desktop/Failed Sideprojects/fragmentedcat/src/Leaderboard.tsx"],"names":["React","useState","useEffect","Link","renderLeader","leader","name","score","id","Leaderboard","leaders","setLeaders","fetch","then","response","json","data","length","map","l"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,IAAT,QAAqB,kBAArB;;;;AAQA,SAASC,YAAT,CAAsBC,MAAtB,EAAsC;AAClC,sBAAO;AAAA,4BACH;AAAA,gBAAKA,MAAM,CAACC;AAAZ;AAAA;AAAA;AAAA;AAAA,YADG,eAEH;AAAA,gBAAKD,MAAM,CAACE;AAAZ;AAAA;AAAA;AAAA;AAAA,YAFG;AAAA,KAASF,MAAM,CAACG,EAAhB;AAAA;AAAA;AAAA;AAAA,UAAP;AAIH;;AAED,eAAe,SAASC,WAAT,GAAuB;AAAA;;AAElC,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAAC,EAAD,CAAtC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZU,IAAAA,KAAK,CAAC,+BAAD,CAAL,CACKC,IADL,CACUC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADtB,EAEKF,IAFL,CAEUG,IAAI,IAAIL,UAAU,CAACK,IAAD,CAF5B;AAGH,GAJQ,EAIN,EAJM,CAAT;AAMA,sBAAO;AAAA,4BACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADG,EAEFN,OAAO,CAACO,MAAR,KAAmB,CAAnB,gBACG;AAAA,iFAAoD,QAAC,IAAD;AAAM,QAAA,EAAE,EAAC,OAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAApD;AAAA;AAAA;AAAA;AAAA;AAAA,YADH,gBAGG;AAAO,MAAA,SAAS,EAAC,oBAAjB;AAAA,8BACI;AAAA,+BACI;AAAA,kCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAOI;AAAA,kBACKP,OAAO,CAACQ,GAAR,CAAYC,CAAC,IAAIf,YAAY,CAACe,CAAD,CAA7B;AADL;AAAA;AAAA;AAAA;AAAA,cAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,YALD;AAAA,kBAAP;AAkBH;;GA5BuBV,W;;KAAAA,W","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link } from \"react-router-dom\";\n\ninterface Leader {\n    id: number,\n    name: string,\n    score: number\n}\n\nfunction renderLeader(leader: Leader) {\n    return <tr key={leader.id}>\n        <td>{leader.name}</td>\n        <td>{leader.score}</td>\n    </tr>\n}\n\nexport default function Leaderboard() {\n\n    const [leaders, setLeaders] = useState([] as Leader[]);\n\n    useEffect(() => {\n        fetch('/.netlify/functions/getScores')\n            .then(response => response.json() as Promise<Leader[]>)\n            .then(data => setLeaders(data));\n    }, []);\n\n    return <>\n        <h2>Leaderboard</h2>\n        {leaders.length === 0 ? \n            <div>No leader scores to display. Would you like to <Link to=\"admin\">add one</Link>?</div>\n        :\n            <table className=\"table leader-table\">\n                <thead>\n                    <tr>\n                        <th>Name</th>\n                        <th>Score</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {leaders.map(l => renderLeader(l))}\n                </tbody>\n            </table>\n        }\n    </>\n}\n\n"]},"metadata":{},"sourceType":"module"}